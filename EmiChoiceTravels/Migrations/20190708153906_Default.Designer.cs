// <auto-generated />
using System;
using EmiChoiceTravels.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmiChoiceTravels.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190708153906_Default")]
    partial class Default
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmiChoiceTravels.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SurName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.CarRental", b =>
                {
                    b.Property<string>("CarRentalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarName");

                    b.Property<int>("CarStatus");

                    b.Property<DateTime>("DateHired");

                    b.Property<DateTime>("DateToBeReturned");

                    b.Property<string>("UserId");

                    b.HasKey("CarRentalId");

                    b.HasIndex("UserId");

                    b.ToTable("CarRentals");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Flight", b =>
                {
                    b.Property<string>("FlightId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FlightName");

                    b.Property<string>("UserId");

                    b.HasKey("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Hotel", b =>
                {
                    b.Property<string>("HotelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HotelName");

                    b.Property<string>("UserId");

                    b.HasKey("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Visa", b =>
                {
                    b.Property<string>("VisaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserId");

                    b.Property<string>("VisaName");

                    b.HasKey("VisaId");

                    b.HasIndex("UserId");

                    b.ToTable("Visas");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.CarRental", b =>
                {
                    b.HasOne("EmiChoiceTravels.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Flight", b =>
                {
                    b.HasOne("EmiChoiceTravels.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Hotel", b =>
                {
                    b.HasOne("EmiChoiceTravels.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EmiChoiceTravels.Models.Visa", b =>
                {
                    b.HasOne("EmiChoiceTravels.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
